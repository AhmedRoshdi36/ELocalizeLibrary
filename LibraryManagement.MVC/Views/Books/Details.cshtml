@model LibraryManagement.DAL.Entities.Book

@{
    ViewData["Title"] = "Details";
}

@Html.AntiForgeryToken()

<div class="container py-3">
    <a asp-action="Create" class="btn btn-primary">+ Create New Book</a>

    <div class="row">
        <div class="col-md-4">
            <div class="card shadow-sm d-flex align-items-center justify-content-center" style="height:340px;">
                @if (!string.IsNullOrEmpty(Model.ImagePath))
                {

                    <img src="@Url.Content(Model.ImagePath)" class="p-2" style="max-height:320px; width:100%; object-fit:contain; background:#fff;" />
                }
                else
                {
                    <div class="bg-light d-flex align-items-center justify-content-center w-100 h-100">
                        <span class="text-muted">No image</span>
                    </div>
                }
            </div>
        </div>
        <div class="col-md-8">
            <div class="card shadow-sm">
                <div class="card-body">
                    <h3 class="card-title">@Model.Title</h3>
                    <h6 class="text-muted">@Model.Author</h6>
                    <p class="mt-3">@Model.Description</p>
                    <span class="badge bg-secondary">Copies: @Model.Copies</span>
                </div>
                <div class="card-footer bg-white border-0 pb-3">
                    <a asp-action="Edit" asp-route-id="@Model?.Id" class="btn btn-warning me-2">Edit</a>
                    <button type="button" class="btn btn-danger me-2 delete-book-btn" 
                            data-book-id="@Model.Id" 
                            data-book-title="@Model.Title"
                            data-book-author="@Model.Author"
                            data-book-image="@Url.Content(Model.ImagePath ?? "")">
                        Delete
                    </button>
                    <a asp-action="Index" class="btn btn-outline-secondary">Back to List</a>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteBookModal" tabindex="-1" aria-labelledby="deleteBookModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteBookModalLabel">
                    <i class="fas fa-exclamation-triangle me-2"></i>Delete Book
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p class="lead mb-3">Are you sure you want to delete this book?</p>
                
                <div class="row align-items-center">
                    <div class="col-md-4 mb-3 mb-md-0">
                        <div class="d-flex align-items-center justify-content-center border bg-white" style="height:150px;">
                            <img id="deleteBookImage" src="" alt="Book Cover" class="p-2" style="max-height:130px; width:100%; object-fit:contain;" />
                        </div>
                    </div>
                    <div class="col-md-8">
                        <h6 id="deleteBookTitle" class="mb-1"></h6>
                        <div id="deleteBookAuthor" class="text-muted mb-2"></div>
                        <span class="badge bg-secondary">This action cannot be undone.</span>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">
                    <i class="fas fa-trash me-1"></i>Delete Book
                </button>
            </div>
        </div>
    </div>
</div>



@section Scripts {
    <script>
        $(document).ready(function () {
            let bookToDelete = null;
            
            // Handle delete button click
            $('.delete-book-btn').on('click', function () {
                const bookId = $(this).data('book-id');
                const bookTitle = $(this).data('book-title');
                const bookAuthor = $(this).data('book-author');
                const bookImage = $(this).data('book-image');
                
                // Store the book data
                bookToDelete = {
                    id: bookId,
                    title: bookTitle,
                    author: bookAuthor,
                    image: bookImage
                };
                
                // Populate modal with book details
                $('#deleteBookTitle').text(bookTitle);
                $('#deleteBookAuthor').text(bookAuthor);
                
                if (bookImage && bookImage.trim() !== '') {
                    $('#deleteBookImage').attr('src', bookImage).show();
                } else {
                    $('#deleteBookImage').hide();
                }
                
                // Show the modal
                $('#deleteBookModal').modal('show');
            });
            
            // Handle confirm delete button click
            $('#confirmDeleteBtn').on('click', function () {
                if (!bookToDelete) return;
                
                // Hide confirmation modal
                $('#deleteBookModal').modal('hide');
                
                // Get anti-forgery token
                const token = $('input[name="__RequestVerificationToken"]').val();
                
                // Send AJAX delete request
                $.ajax({
                    url: '/Books/DeleteAjax',
                    type: 'POST',
                    data: {
                        id: bookToDelete.id,
                        __RequestVerificationToken: token
                    },
                    success: function (response) {
                        if (response.success) {
                            // Show success message
                            showNotification('Book deleted successfully!', 'success');
                            
                            // Redirect to index page after a short delay
                            setTimeout(function() {
                                window.location.href = '/Books';
                            }, 1500);
                        } else {
                            showNotification('Error deleting book: ' + response.message, 'error');
                        }
                    },
                    error: function (xhr, status, error) {
                        showNotification('Error deleting book. Please try again.', 'error');
                        console.error('Delete error:', error);
                    }
                });
            });
            
            // Function to show notifications
            function showNotification(message, type) {
                const alertClass = type === 'success' ? 'alert-success' : 'alert-danger';
                const alertHtml = `
                    <div class="alert ${alertClass} alert-dismissible fade show position-fixed" 
                         style="top: 20px; right: 20px; z-index: 9999; min-width: 300px;" role="alert">
                        ${message}
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                `;
                
                $('body').append(alertHtml);
                
                // Auto-remove after 5 seconds
                setTimeout(function() {
                    $('.alert').fadeOut(300, function() {
                        $(this).remove();
                    });
                }, 5000);
            }
        });
    </script>
}
